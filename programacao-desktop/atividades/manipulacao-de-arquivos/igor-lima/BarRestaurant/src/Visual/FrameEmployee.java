
package Visual;

import Model.Employee;
import com.google.gson.Gson;
import java.io.*;
import java.nio.file.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class FrameEmployee extends javax.swing.JFrame {

    ArrayList<Employee> employee = new ArrayList<Employee>();
    String name_pattern = "^[A-Za-z ]{1,50}+$";
    String phone_pattern = "\\d{2,3}-\\d{4,5}-\\d{4}";
    String address_pattern = "^[A-Za-z1-9 ]{1,50}+$";
    Employee emp;
    private ObjectInputStream in;
    FileWriter w = null;
    int ckpJson = 0;
    int ckpTxt = 0;
    int ckpBin = 0;
            
    
    public FrameEmployee() throws ClassNotFoundException {
        initComponents();
        this.setSize(598, 596);
        this.setLocationRelativeTo(null);
    }

    public boolean verifyText(){
        //nome
        if(txtName.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Nome do funcionario não pode estar vazio, digite novamente", 
                    "Cadastro não realizado!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        else if(txtName.getText().length() < 3 || txtName.getText().length() > 50){
            JOptionPane.showMessageDialog(null, "Nome do funcionario deve ter entre 3 a 50 caracteres, digite novamente!", 
                    "Cadastro não realizado!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        else if(!(txtName.getText()).matches(name_pattern)){
        JOptionPane.showMessageDialog(null, "Caracteres do funcionario invalidos, digite novamente", 
                    "Cadastro não realizado!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        //telefone
        else if(txtPhone.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Telefone não pode estar vazio, digite novamente", 
                    "Cadastro não realizado!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        else if(!(txtPhone.getText()).matches(phone_pattern)){
        JOptionPane.showMessageDialog(null, "Numeros do telefone invalidos, digite novamente "
                + "(Formato: 00-0000-0000 ou  00-00000-0000)", 
                    "Cadastro não realizado!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        //endereço
        if(txtAddress.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Endereco não pode estar vazio, digite novamente", 
                    "Cadastro não realizado!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        else if(txtAddress.getText().length() <= 5 || txtName.getText().length() > 50){
            JOptionPane.showMessageDialog(null, "Endereco deve ter entre 6 a 50 caracteres, digite novamente!", 
                    "Cadastro não realizado!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        else if(!(txtAddress.getText()).matches(address_pattern)){
        JOptionPane.showMessageDialog(null, "Caracteres de endereço invalidos, digite novamente", 
                    "Cadastro não realizado!", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }

        return true;
    }
    
    public void openFile() {
            try {
                in = new ObjectInputStream(new FileInputStream("employee.bin"));
            }
            catch (IOException ioException) {
                System.err.println("Error opening file.");
            }
    }
    
    public Employee readRecords() throws ClassNotFoundException, IOException {
        
        Employee e = new Employee();
        openFile();
            while(true)
            {
               e = (Employee) in.readObject();
               closeFile();
               return e;
            }
         
    
        
        /*String text = "";
        try{
            while(true){
		emp = (Employee) in.readObject();
                for(Employee emplo: employee){
                    text += ""+Integer.toString(emplo.getID())+"\n"+emplo.getName()+"\n"+emplo.getAddress()+"\n"+emplo.getPhone()+"\n\n"; 
                    jText.setText(text);   
                    ckpBin = 1;
                }             
            }*/  
        

}
    
    	public void closeFile() {
            try {
                if (in != null) in.close();
            }
            catch (IOException ioException) { 

            }
	}
   
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtID = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtName = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtPhone = new javax.swing.JTextPane();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jText = new javax.swing.JTextArea();

        setPreferredSize(new java.awt.Dimension(600, 596));
        setSize(new java.awt.Dimension(600, 596));

        jScrollPane4.setViewportView(txtAddress);

        txtID.setEnabled(false);
        jScrollPane7.setViewportView(txtID);

        jButton1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton1.setText("Salvar Texto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton2.setText("Salvar JSON");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Nome:");

        jButton4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton4.setText("Salvar Binario");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Telefone:");

        jButton5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton5.setText("Recuperar Binario");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel3.setText("Endereço:");

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("ID:");

        jScrollPane2.setViewportView(txtName);

        jScrollPane3.setViewportView(txtPhone);

        jButton6.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton6.setText("Recuperar JSON");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton7.setText("Recuperar Texto");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jText.setColumns(20);
        jText.setRows(5);
        jScrollPane5.setViewportView(jText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane4)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton6)
                    .addComponent(jButton5))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(verifyText()){
           
            emp = new Employee(txtName.getText(), txtAddress.getText(), txtPhone.getText());
            String name = txtName.getText();
            String address = txtAddress.getText();
            String phone = txtPhone.getText();
            String id = Integer.toString(emp.getID());
            if(ckpTxt == 1){
                try {
                    w = new FileWriter("employee.txt", false);
                } catch (IOException ex) {
                    Logger.getLogger(FrameEmployee.class.getName()).log(Level.SEVERE, null, ex);
                }
                ckpTxt = 0;
            }
            else{
                try {
                    w = new FileWriter("employee.txt", true);
                } 
                catch (IOException ex) {
                    Logger.getLogger(FrameEmployee.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            try{
                w.write(id);
                w.write(System.getProperty( "line.separator" ));
                w.write(name);
                w.write(System.getProperty( "line.separator" ));
                w.write(address);
                w.write(System.getProperty( "line.separator" ));
                w.write(phone);
                w.write(System.getProperty( "line.separator" ));
                w.write(System.getProperty( "line.separator" ));
                w.close();
                JOptionPane.showMessageDialog(null, "Texto inserido com sucesso!");
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Texto nao inserido!");
            }
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(verifyText()){
            Gson gson = new Gson();
            emp = new Employee(txtName.getText(), txtAddress.getText(), txtPhone.getText());
            String json = gson.toJson(emp);
            
            if(ckpJson == 1){
                try {
                    w = new FileWriter("employee.json", false);
                } catch (IOException ex) {
                    Logger.getLogger(FrameEmployee.class.getName()).log(Level.SEVERE, null, ex);
                }
                ckpJson = 0;
            }
            else{
                try {
                    w = new FileWriter("employee.json", true);
                } 
                catch (IOException ex) {
                    Logger.getLogger(FrameEmployee.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            try { 
                w.write(json);
                w.write(System.getProperty( "line.separator" ));
                w.write(System.getProperty( "line.separator" ));
                w.close();
            } 
            catch (IOException ex) {
                Logger.getLogger(FrameEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso!");
        }        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(verifyText()){
            ObjectOutputStream out;
            try{
                out = new ObjectOutputStream(new FileOutputStream("employee.bin"));
                Employee emp = new Employee(txtName.getText(), txtAddress.getText(), txtPhone.getText());
                employee.add(emp);
                
                try{
                    out.writeObject(emp);
                }
                catch(IOException e){

                }
                try{
                    if (out != null) out.close();
                }
                catch (IOException ioException) { 
                }
            }
            catch(IOException e){

            }
            JOptionPane.showMessageDialog(null, "Binario inserido com sucesso!");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jText.setText("");
        openFile();
        Employee e = new Employee();
        try {
            e = readRecords();
            jText.setText(""+e);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrameEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (IOException evento){
        
        }
        closeFile();
        
  
    
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String file = ("employee.json");
        jText.setText("");
        try {
            FileReader read = new FileReader(file);
            BufferedReader br = new BufferedReader(read);
            jText.read(br, null);
            ckpJson = 1;
            br.close();
        } 
        catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Arquivo JSON não existe!");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String file = ("employee.txt");
        jText.setText("");
        try {
            FileReader read = new FileReader(file);
            BufferedReader br = new BufferedReader(read);
            jText.read(br, null);
            ckpTxt = 1;
            br.close();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Arquivo texto não existe!");
        }
        
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrameEmployee().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FrameEmployee.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextArea jText;
    private javax.swing.JTextPane txtAddress;
    private javax.swing.JTextPane txtID;
    private javax.swing.JTextPane txtName;
    private javax.swing.JTextPane txtPhone;
    // End of variables declaration//GEN-END:variables
}
